<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/loveito/demo/AuthFragment.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/loveito/demo/AuthFragment.kt" />
              <option name="originalContent" value="package com.loveito.demo&#10;&#10;import android.os.Bundle&#10;import android.util.Patterns&#10;import android.view.View&#10;import android.widget.*&#10;import androidx.fragment.app.Fragment&#10;import com.google.firebase.auth.FirebaseAuth&#10;&#10;class AuthFragment : Fragment(R.layout.fragment_auth) {&#10;    private val auth by lazy { FirebaseAuth.getInstance() }&#10;&#10;    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {&#10;        val emailEt = view.findViewById&lt;EditText&gt;(R.id.etEmail)&#10;        val passEt  = view.findViewById&lt;EditText&gt;(R.id.etPassword)&#10;        val status  = view.findViewById&lt;TextView&gt;(R.id.tvStatus)&#10;&#10;        fun toast(s:String)=Toast.makeText(requireContext(),s,Toast.LENGTH_SHORT).show()&#10;        fun update(){ status.text = auth.currentUser?.email?.let { &quot;Estado: $it&quot; } ?: &quot;Estado: no autenticado&quot; }&#10;        fun goHome() {&#10;            parentFragmentManager.beginTransaction()&#10;                .replace((view.parent as android.view.ViewGroup).id, HomeFragment())&#10;                .commit()&#10;        }&#10;&#10;        view.findViewById&lt;Button&gt;(R.id.btnSignUp).setOnClickListener {&#10;            val e=emailEt.text.toString().trim(); val p=passEt.text.toString()&#10;            if (!Patterns.EMAIL_ADDRESS.matcher(e).matches()) { toast(&quot;Email inválido&quot;); return@setOnClickListener }&#10;            if (p.length&lt;6) { toast(&quot;Contraseña mínima 6&quot;); return@setOnClickListener }&#10;            auth.createUserWithEmailAndPassword(e,p)&#10;                .addOnSuccessListener { auth.currentUser?.sendEmailVerification(); toast(&quot;Cuenta creada&quot;); update(); goHome() }&#10;                .addOnFailureListener { toast(it.localizedMessage ?: &quot;Error al crear&quot;) }&#10;        }&#10;        view.findViewById&lt;Button&gt;(R.id.btnSignIn).setOnClickListener {&#10;            val e=emailEt.text.toString().trim(); val p=passEt.text.toString()&#10;            if (!Patterns.EMAIL_ADDRESS.matcher(e).matches()) { toast(&quot;Email inválido&quot;); return@setOnClickListener }&#10;            if (p.isEmpty()) { toast(&quot;Ingresá contraseña&quot;); return@setOnClickListener }&#10;            auth.signInWithEmailAndPassword(e,p)&#10;                .addOnSuccessListener { toast(&quot;Ingreso OK&quot;); update(); goHome() }&#10;                .addOnFailureListener { toast(it.localizedMessage ?: &quot;Error al ingresar&quot;) }&#10;        }&#10;        view.findViewById&lt;Button&gt;(R.id.btnForgot).setOnClickListener {&#10;            val e=emailEt.text.toString().trim()&#10;            if (!Patterns.EMAIL_ADDRESS.matcher(e).matches()) { toast(&quot;Ingresá un email válido&quot;); return@setOnClickListener }&#10;            auth.sendPasswordResetEmail(e)&#10;                .addOnSuccessListener { toast(&quot;Email enviado&quot;) }&#10;                .addOnFailureListener { toast(it.localizedMessage ?: &quot;No se pudo enviar&quot;) }&#10;        }&#10;        update()&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.loveito.demo&#10;&#10;import android.os.Bundle&#10;import android.util.Patterns&#10;import android.view.View&#10;import android.widget.*&#10;import androidx.fragment.app.Fragment&#10;import com.google.firebase.auth.FirebaseAuth&#10;&#10;class AuthFragment : Fragment(R.layout.fragment_auth) {&#10;    private val auth by lazy { FirebaseAuth.getInstance() }&#10;&#10;    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {&#10;        val emailEt = view.findViewById&lt;EditText&gt;(R.id.etEmail)&#10;        val passEt  = view.findViewById&lt;EditText&gt;(R.id.etPassword)&#10;&#10;        fun toast(s:String)=Toast.makeText(requireContext(),s,Toast.LENGTH_SHORT).show()&#10;        fun goHome() {&#10;            parentFragmentManager.beginTransaction()&#10;                .replace((view.parent as android.view.ViewGroup).id, HomeFragment())&#10;                .commit()&#10;        }&#10;&#10;        view.findViewById&lt;Button&gt;(R.id.btnSignUp).setOnClickListener {&#10;            val e=emailEt.text.toString().trim(); val p=passEt.text.toString()&#10;            if (!Patterns.EMAIL_ADDRESS.matcher(e).matches()) { toast(&quot;Email inválido&quot;); return@setOnClickListener }&#10;            if (p.length&lt;6) { toast(&quot;Contraseña mínima 6&quot;); return@setOnClickListener }&#10;            auth.createUserWithEmailAndPassword(e,p)&#10;                .addOnSuccessListener { auth.currentUser?.sendEmailVerification(); toast(&quot;Cuenta creada&quot;); goHome() }&#10;                .addOnFailureListener { toast(it.localizedMessage ?: &quot;Error al crear&quot;) }&#10;        }&#10;        view.findViewById&lt;Button&gt;(R.id.btnSignIn).setOnClickListener {&#10;            val e=emailEt.text.toString().trim(); val p=passEt.text.toString()&#10;            if (!Patterns.EMAIL_ADDRESS.matcher(e).matches()) { toast(&quot;Email inválido&quot;); return@setOnClickListener }&#10;            if (p.isEmpty()) { toast(&quot;Ingresá contraseña&quot;); return@setOnClickListener }&#10;            auth.signInWithEmailAndPassword(e,p)&#10;                .addOnSuccessListener { toast(&quot;Ingreso OK&quot;); goHome() }&#10;                .addOnFailureListener { toast(it.localizedMessage ?: &quot;Error al ingresar&quot;) }&#10;        }&#10;        view.findViewById&lt;Button&gt;(R.id.btnForgot).setOnClickListener {&#10;            val e=emailEt.text.toString().trim()&#10;            if (!Patterns.EMAIL_ADDRESS.matcher(e).matches()) { toast(&quot;Ingresá un email válido&quot;); return@setOnClickListener }&#10;            auth.sendPasswordResetEmail(e)&#10;                .addOnSuccessListener { toast(&quot;Email enviado&quot;) }&#10;                .addOnFailureListener { toast(it.localizedMessage ?: &quot;No se pudo enviar&quot;) }&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>